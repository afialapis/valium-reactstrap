
// Forms
$gray-100: #f0f3f5;
$gray-200: #c2cfd6;
$gray-300: #a4b7c1;
$gray-700: #495057 !default;

$input-group-addon-bg:            $gray-100;
$input-border-color:              $gray-200;
$input-group-addon-border-color:  $gray-200;

$list-group-color:                  null !default;
/*
$list-group-bg:                     $white !default;
$list-group-border-color:           rgba($black, .125) !default;
$list-group-border-width:           $border-width !default;
$list-group-border-radius:          $border-radius !default;

$list-group-item-padding-y:         .75rem !default;
$list-group-item-padding-x:         1.25rem !default;
*/
$list-group-hover-bg:               $gray-200 !default;

$list-group-action-color:           $gray-700 !default;
$list-group-action-hover-color:     $list-group-action-color !default;


/*
.form-check-input {
  position: relative;
  left: 2em;
  top: 0.25em;
  margin-bottom: 0;
}
*/

.sform-reactstrap {
  padding: 0 2em;
}

.sform-reactstrap-buttons {
  margin-top: 3em;
  text-align: center;
}
/**
 + inline
 */
 .sform-reactstrap .form-group.inline {
  margin-bottom:0;
  display: inline-block;
}

/**
 * ensure :invalid red when :focus
 * Better use is-valid and is-invalid than :valid / :invalid (compound components will thank you)
 */

.sform-reactstrap .form-control.is-invalid:focus {
  border-color: #dc3545;
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}

/**
 * is-unsaved (but not invalid)
 */

.sform-reactstrap .form-group.is-unsaved .form-control.is-valid:not(:focus) {
  border-color: #cad8e4;
  outline: none;
  box-shadow: 0 0 0 0.2rem rgba(130, 141, 146, 0.25);
}



/**
 *  select search
 **/

.sform-reactstrap .sform-reactstrap-select-search .sform-reactstrap-select-search-list {
  background-color: white;
  list-style: none;
  position: relative;
  left: calc(1.95rem + 20px);
  width: calc(100% - (1.95rem + 20px));
  margin-bottom:1.5rem;
}

.sform-reactstrap .sform-reactstrap-select-search .sform-reactstrap-select-search-list-item {
  cursor: pointer;
}


.sform-reactstrap .sform-reactstrap-select-search .sform-reactstrap-select-search-list-item.list-group-item-action:hover,
.sform-reactstrap .sform-reactstrap-select-search .sform-reactstrap-select-search-list-item.list-group-item-action:focus {
  color: $list-group-action-hover-color;
  background-color: $list-group-hover-bg;
}





/*
.sform-reactstrap-select-search .sform-reactstrap-select-search-list-item:hover {
  background-color: white;
}
*/



/**
 * fix for addons
 **/
 .sform-reactstrap .input-group-addon {
   min-width: 40px;
   white-space: nowrap;
   vertical-align: middle; // Match the inputs
 }
 
 
 .sform-reactstrap .input-group-addon {
   padding: 0.15rem 0.75rem;
 }
 .sform-reactstrap .fa-1_5x {
     font-size: 1.5em;
 }

.sform-reactstrap .input-group-addon {
  position: relative;
  top: 0.45em;
  left: 0.45em;  
}

.sform-reactstrap .form-group-file .input-group-addon {
  top: unset;
}


.sform-reactstrap .form-group label {
  color: #524f4f;
  font-style: italic;
  font-weight: bold;
  padding-left: 4em;
}

.sform-reactstrap .form-group .sform-reactstrap-feedback {
  margin-top: 0.5em;
  color: #c75757;
  font-style: italic;
  padding-left: 4em;
}

.sform-reactstrap .form-control-file {
  width: auto !important;
}


/**
 * fix for checkbox
 **/
.form-check-input {
  position: relative;
  left: 2em;
  top: 0.25em;
  margin-bottom: 0;
}

/**
 * afi-select
 */
/*
.afi-select {
position: relative;
flex: 1 1 auto;
width: 1%;
margin-bottom: 0;
}

.afi-select__control {
  min-width: 125px;

  min-height: 2.75em !important;
  max-height: 2.75em !important;

  cursor: pointer !important;

  font-size: $font-size-base !important;
  line-height: $input-btn-line-height !important;
  color: $input-color !important;
  background-color: $input-bg !important;
  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
  background-image: none !important;
  background-clip: padding-box !important;
  border: $input-btn-border-width solid $input-border-color !important;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius !important;
  } @else {
    // Otherwise undo the iOS default
    border-radius: 0 !important;
  }

  @if $enable-shadows {
    box-shadow: $input-box-shadow !important;
  }

  @if $enable-transitions {
    transition: $input-transition !important;
  }

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }  
}

.afi-select__control:focus,
.afi-select__control:hover {
  color: $input-focus-color !important;
  background-color: $input-focus-bg !important;
  border-color: $input-focus-border-color !important;
  outline: none !important;
  // Avoid using mixin so we can pass custom focus shadow properly
  @if $enable-shadows {
    box-shadow: $input-box-shadow, $input-btn-focus-box-shadow !important;
  } @else {
    box-shadow: $input-btn-focus-box-shadow !important;
  }
}

.form-group.is-unsaved .afi-select__control:not(:focus) {
  border-color: #cad8e4 !important;
  outline: none  !important;
  box-shadow: 0 0 0 0.2rem rgba(130, 141, 146, 0.25)  !important;
 }


.afi-select__control .afi-select__value-container {
  position: unset !important;
}

.afi-select__control .afi-select__indicator-separator {
  margin-top: 0 !important;
  margin-bottom: 0px !important;
}

.afi-select__control .afi-select__value-container--has-value + .afi-select__indicators .afi-select__indicator-separator {
  margin-top: 0 !important;
  margin-bottom: 6px !important;
}


.afi-select__control .afi-select__dropdown-indicator {
padding: 4px 8px !important;
}

.afi-select__control option {
min-height: 2.75em !important;
max-height: 2.75em !important;
}


*/


/**
 * buttons
 */
 button {
  cursor: pointer;
}

.btn {
  .badge {
    position: absolute;
    top: 2px;
    right: 6px;
    font-size: 9px;
  }
}

.btn-transparent {
  color: #fff;
  background-color: transparent;
  border-color: transparent;
}

.btn {
  [class^="icon-"], [class*=" icon-"] {
    display: inline-block;
    margin-top: -2px;
    vertical-align: middle;
  }
} 

$btn-secondary-border:            $gray-300;


.sform-reactstrap .sform-reactstrap-buttons button:not(:first-child) {
  margin-left: 7px;
}

.svg-inline--fa {
  margin-right: 5px;
}